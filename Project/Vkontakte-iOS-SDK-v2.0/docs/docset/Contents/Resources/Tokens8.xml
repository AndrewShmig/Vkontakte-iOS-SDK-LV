<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/VKUser.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/VKUser</TokenIdentifier>
			<Abstract type="html">Класс представляет пользователя социальной сети, который может осуществлять ряд
действий с объектами вроде групп, друзей, музыкой, видео и тд.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>
			
			<NodeRef refid="8"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/setDelegate:</TokenIdentifier>
			<Abstract type="html">Делегат</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readwrite) id&lt;VKRequestDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/delegate</TokenIdentifier>
			<Abstract type="html">Делегат</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readwrite) id&lt;VKRequestDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VKUser/delegate</TokenIdentifier>
			<Abstract type="html">Делегат</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readwrite) id&lt;VKRequestDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/setAccessToken:</TokenIdentifier>
			<Abstract type="html">Пользовательски токен доступа текущего активного пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) VKAccessToken *accessToken</Declaration>
			
			
			<Anchor>//api/name/accessToken</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/accessToken</TokenIdentifier>
			<Abstract type="html">Пользовательски токен доступа текущего активного пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) VKAccessToken *accessToken</Declaration>
			
			
			<Anchor>//api/name/accessToken</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VKUser/accessToken</TokenIdentifier>
			<Abstract type="html">Пользовательски токен доступа текущего активного пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) VKAccessToken *accessToken</Declaration>
			
			
			<Anchor>//api/name/accessToken</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/setStartAllRequestsImmediately:</TokenIdentifier>
			<Abstract type="html">Начинать ли выполнение запросов немедленно или предоставить программисту
самому выбирать момент запуска запроса.
По умолчанию принимает значение YES.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) BOOL startAllRequestsImmediately</Declaration>
			
			
			<Anchor>//api/name/startAllRequestsImmediately</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/startAllRequestsImmediately</TokenIdentifier>
			<Abstract type="html">Начинать ли выполнение запросов немедленно или предоставить программисту
самому выбирать момент запуска запроса.
По умолчанию принимает значение YES.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) BOOL startAllRequestsImmediately</Declaration>
			
			
			<Anchor>//api/name/startAllRequestsImmediately</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VKUser/startAllRequestsImmediately</TokenIdentifier>
			<Abstract type="html">Начинать ли выполнение запросов немедленно или предоставить программисту
самому выбирать момент запуска запроса.
По умолчанию принимает значение YES.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) BOOL startAllRequestsImmediately</Declaration>
			
			
			<Anchor>//api/name/startAllRequestsImmediately</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/setOfflineMode:</TokenIdentifier>
			<Abstract type="html">Оффлайн режим. В данном режиме данные будут запрошены из кэша и возвращены
даже в случае истечения срока их действия (удаления не произойдет).
По умолчанию режим выключен.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) BOOL offlineMode</Declaration>
			
			
			<Anchor>//api/name/offlineMode</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/offlineMode</TokenIdentifier>
			<Abstract type="html">Оффлайн режим. В данном режиме данные будут запрошены из кэша и возвращены
даже в случае истечения срока их действия (удаления не произойдет).
По умолчанию режим выключен.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) BOOL offlineMode</Declaration>
			
			
			<Anchor>//api/name/offlineMode</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VKUser/offlineMode</TokenIdentifier>
			<Abstract type="html">Оффлайн режим. В данном режиме данные будут запрошены из кэша и возвращены
даже в случае истечения срока их действия (удаления не произойдет).
По умолчанию режим выключен.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) BOOL offlineMode</Declaration>
			
			
			<Anchor>//api/name/offlineMode</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/VKUser/currentUser</TokenIdentifier>
			<Abstract type="html">Текущий активный пользователь.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>+ (instancetype)currentUser</Declaration>
			
			
			<Anchor>//api/name/currentUser</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/VKUser/activateUserWithID:</TokenIdentifier>
			<Abstract type="html">Делает активным пользователя с идентификатором userID.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>+ (BOOL)activateUserWithID:(NSUInteger)userID</Declaration>
			<Parameters>
				<Parameter>
					<Name>userID</Name>
					<Abstract type="html">идентификатор пользователя, которого необходимо активировать</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">булево значение, удалось ли активировать указанного пользователя или нет</Abstract></ReturnValue>
			<Anchor>//api/name/activateUserWithID:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/VKUser/localUsers</TokenIdentifier>
			<Abstract type="html">Получение списка пользователей находящихся в хранилище</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>+ (NSArray *)localUsers</Declaration>
			
			<ReturnValue><Abstract type="html">массив пользовательских идентификаторов</Abstract></ReturnValue>
			<Anchor>//api/name/localUsers</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/info</TokenIdentifier>
			<Abstract type="html">Информация о текущем пользователе.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)info</Declaration>
			
			<ReturnValue><Abstract type="html">экземпляр класса VKRequest, который инкапсулирует в себе все необходимые параметры для
осуществления запроса пользовательской информации. Объект запроса возвращается по причине
возможной необходимости отменить выполнение текущего запроса или отложенное выполнение запроса.</Abstract></ReturnValue>
			<Anchor>//api/name/info</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/info:</TokenIdentifier>
			<Abstract type="html">Информация о пользователе(ях) с указанными параметрами</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)info:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, которые будут переданы при запросе методом GET</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/info:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/search:</TokenIdentifier>
			<Abstract type="html">Возвращает список пользователей в соответствии с заданным критерием поиска</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)search:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, с полным списком ключей можно ознакомиться по
ссылке из документации: https://vk.com/dev/users.search</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/search:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/subscriptions:</TokenIdentifier>
			<Abstract type="html">Возвращает список идентификаторов пользователей и групп, которые входят в список подписок пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)subscriptions:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, с полным списком ключей можно ознакомиться по
ссылке из документации: https://vk.com/dev/users.getSubscriptions</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/subscriptions:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/followers:</TokenIdentifier>
			<Abstract type="html">Возвращает список идентификаторов пользователей, которые являются подписчиками пользователя. Идентификаторы пользователей в списке отсортированы в порядке убывания времени их добавления.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)followers:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, с полным списком ключей можно ознакомиться по
ссылке из документации: https://vk.com/dev/users.getFollowers</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/followers:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/description</TokenIdentifier>
			<Abstract type="html">Описание текущего пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (NSString *)description</Declaration>
			
			
			<Anchor>//api/name/description</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/likesGetList:</TokenIdentifier>
			<Abstract type="html">Получает список идентификаторов пользователей, которые добавили заданный объект в свой список Мне нравится.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)likesGetList:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/likes.getList</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/likesGetList:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/likesAdd:</TokenIdentifier>
			<Abstract type="html">Добавляет указанный объект в список Мне нравится текущего пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)likesAdd:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/likes.add</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/likesAdd:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/likesDelete:</TokenIdentifier>
			<Abstract type="html">Удаляет указанный объект из списка Мне нравится текущего пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)likesDelete:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/likes.delete</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/likesDelete:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/likesIsLiked:</TokenIdentifier>
			<Abstract type="html">Проверяет, находится ли объект в списке Мне нравится заданного пользователя.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)likesIsLiked:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/likes.isLiked</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/likesIsLiked:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesGet:</TokenIdentifier>
			<Abstract type="html">Возвращает список входящих либо исходящих личных сообщений текущего пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.get</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesGet:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesGetDialogs:</TokenIdentifier>
			<Abstract type="html">Возвращает список диалогов текущего пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesGetDialogs:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.getDialogs</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesGetDialogs:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesGetByID:</TokenIdentifier>
			<Abstract type="html">Возвращает сообщения по их id</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesGetByID:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.getById</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesGetByID:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesSearch:</TokenIdentifier>
			<Abstract type="html">Возвращает список найденных личных сообщений текущего пользователя по введенной строке поиска</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesSearch:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.search</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesSearch:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesGetHistory:</TokenIdentifier>
			<Abstract type="html">Возвращает историю сообщений для указанного пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesGetHistory:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.getHistory</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesGetHistory:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesSend:</TokenIdentifier>
			<Abstract type="html">Отправляет сообщение</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesSend:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.send</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesSend:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesDelete:</TokenIdentifier>
			<Abstract type="html">Удаляет сообщение</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesDelete:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.delete</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesDelete:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesDeleteDialog:</TokenIdentifier>
			<Abstract type="html">Удаляет все личные сообщения в диалоге</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesDeleteDialog:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.deleteDialog</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesDeleteDialog:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesRestore:</TokenIdentifier>
			<Abstract type="html">Восстанавливает удаленное сообщение</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesRestore:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.restore</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesRestore:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesMarkAsNew:</TokenIdentifier>
			<Abstract type="html">Помечает сообщения как непрочитанные</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesMarkAsNew:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.markAsNew</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesMarkAsNew:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesMarkAsRead:</TokenIdentifier>
			<Abstract type="html">Помечает сообщения как прочитанные</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesMarkAsRead:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.markAsRead</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesMarkAsRead:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesMarkAsImportant:</TokenIdentifier>
			<Abstract type="html">Помечает сообщения как важные либо снимает отметку</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesMarkAsImportant:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.markAsImportant</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesMarkAsImportant:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesGetLongPollServer:</TokenIdentifier>
			<Abstract type="html">Возвращает данные, необходимые для подключения к Long Poll серверу</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesGetLongPollServer:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.getLongPollServer</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/messagesGetLongPollServer:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesGetLongPollHistory:</TokenIdentifier>
			<Abstract type="html">Возвращает обновления в личных сообщениях пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesGetLongPollHistory:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.getLongPollHistory</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesGetLongPollHistory:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesGetChat:</TokenIdentifier>
			<Abstract type="html">Возвращает информацию о беседе</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesGetChat:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.getChat</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesGetChat:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesCreateChat:</TokenIdentifier>
			<Abstract type="html">Создаёт беседу с несколькими участниками</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesCreateChat:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.createChat</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesCreateChat:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesEditChat:</TokenIdentifier>
			<Abstract type="html">Изменяет название беседы</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesEditChat:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.editChat</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesEditChat:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesGetChatUsers:</TokenIdentifier>
			<Abstract type="html">Позволяет получить список пользователей мультидиалога по его id</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesGetChatUsers:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.getChatUsers</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesGetChatUsers:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesSetActivity:</TokenIdentifier>
			<Abstract type="html">Изменяет статус набора текста пользователем в диалоге</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesSetActivity:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.setActivity</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesSetActivity:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesSearchDialogs:</TokenIdentifier>
			<Abstract type="html">Возвращает список найденных диалогов текущего пользователя по введенной строке поиска</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesSearchDialogs:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.searchDialogs</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesSearchDialogs:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesAddChatUser:</TokenIdentifier>
			<Abstract type="html">Добавляет в мультидиалог нового пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesAddChatUser:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.addChatUser</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/messagesAddChatUser:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesRemoveChatUser:</TokenIdentifier>
			<Abstract type="html">Исключает из мультидиалога пользователя, если текущий пользователь был создателем беседы либо пригласил исключаемого пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesRemoveChatUser:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.removeChatUser</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/messagesRemoveChatUser:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesGetLastActivity:</TokenIdentifier>
			<Abstract type="html">Возвращает текущий статус и дату последней активности указанного пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesGetLastActivity:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.getLastActivity</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesGetLastActivity:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesSetChatPhoto:</TokenIdentifier>
			<Abstract type="html">Позволяет установить фотографию мультидиалога, загруженную с помощью метода photos.getChatUploadServer</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesSetChatPhoto:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.setChatPhoto</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesSetChatPhoto:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesDeleteChatPhoto:</TokenIdentifier>
			<Abstract type="html">Позволяет удалить фотографию мультидиалога</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesDeleteChatPhoto:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/messages.deleteChatPhoto</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/messagesDeleteChatPhoto:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioGet:</TokenIdentifier>
			<Abstract type="html">Возвращает список аудиозаписей пользователя или сообщества</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.get</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioGet:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioGetByID:</TokenIdentifier>
			<Abstract type="html">Возвращает информацию об аудиозаписях</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioGetByID:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.getById</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioGetByID:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioGetLyrics:</TokenIdentifier>
			<Abstract type="html">Возвращает текст аудиозаписи</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioGetLyrics:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.getLyrics</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioGetLyrics:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioSearch:</TokenIdentifier>
			<Abstract type="html">Возвращает список аудиозаписей в соответствии с заданным критерием поиска</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioSearch:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.search</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioSearch:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioGetUploadServer:</TokenIdentifier>
			<Abstract type="html">Возвращает адрес сервера для загрузки аудиозаписей</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioGetUploadServer:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.getUploadServer</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioGetUploadServer:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioSave:</TokenIdentifier>
			<Abstract type="html">Сохраняет аудиозаписи после успешной загрузки</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioSave:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.save</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioSave:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioAdd:</TokenIdentifier>
			<Abstract type="html">Копирует аудиозапись на страницу пользователя или группы</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioAdd:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.add</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioAdd:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioDelete:</TokenIdentifier>
			<Abstract type="html">Удаляет аудиозапись со страницы пользователя или сообщества</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioDelete:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.delete</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioDelete:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioEdit:</TokenIdentifier>
			<Abstract type="html">Редактирует данные аудиозаписи на странице пользователя или сообщества</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioEdit:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.edit</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioEdit:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioReorder:</TokenIdentifier>
			<Abstract type="html">Изменяет порядок аудиозаписи, перенося ее между аудиозаписями, идентификаторы которых переданы параметрами after и before</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioReorder:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.reorder</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioReorder:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioRestore:</TokenIdentifier>
			<Abstract type="html">Восстанавливает аудиозапись после удаления</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioRestore:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.restore</Abstract>
				</Parameter><Parameter>
					<Name>@see</Name>
					<Abstract type="html">info</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/audioRestore:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioGetAlbums:</TokenIdentifier>
			<Abstract type="html">Возвращает список альбомов аудиозаписей пользователя или группы</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioGetAlbums:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.getAlbums</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioGetAlbums:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioAddAlbum:</TokenIdentifier>
			<Abstract type="html">Создает пустой альбом аудиозаписей</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioAddAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.addAlbum</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioAddAlbum:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioEditAlbum:</TokenIdentifier>
			<Abstract type="html">Редактирует название альбома аудиозаписей</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioEditAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.editAlbum</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioEditAlbum:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioDeleteAlbum:</TokenIdentifier>
			<Abstract type="html">Удаляет альбом аудиозаписей</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioDeleteAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.deleteAlbum</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioDeleteAlbum:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioMoveToAlbum:</TokenIdentifier>
			<Abstract type="html">Перемещает аудиозаписи в альбом</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioMoveToAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.moveToAlbum</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioMoveToAlbum:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioSetBroadcast:</TokenIdentifier>
			<Abstract type="html">Транслирует аудиозапись в статус пользователю или сообществу</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioSetBroadcast:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.setBroadcast</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioSetBroadcast:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioGetBroadcastList:</TokenIdentifier>
			<Abstract type="html">Возвращает список друзей и сообществ пользователя, которые транслируют музыку в статус</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioGetBroadcastList:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.getBroadcastList</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioGetBroadcastList:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioGetRecommendations:</TokenIdentifier>
			<Abstract type="html">Возвращает список рекомендуемых аудиозаписей на основе списка воспроизведения заданного пользователя или на основе одной выбранной аудиозаписи</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioGetRecommendations:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.getRecommendations</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioGetRecommendations:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioGetPopular:</TokenIdentifier>
			<Abstract type="html">Возвращает список аудиозаписей из раздела &quot;Популярное&quot;</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioGetPopular:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.getPopular</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioGetPopular:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioGetCount:</TokenIdentifier>
			<Abstract type="html">Возвращает количество аудиозаписей пользователя или сообщества</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioGetCount:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/audio.getCount</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/audioGetCount:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsGet:</TokenIdentifier>
			<Abstract type="html">Возвращает список идентификаторов друзей пользователя или расширенную информацию о друзьях пользователя (при использовании параметра fields)</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по этой ссылке: https://vk.com/dev/friends.get</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/friendsGet:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsGetOnline:</TokenIdentifier>
			<Abstract type="html">Возвращает список идентификаторов друзей пользователя, находящихся на сайте</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsGetOnline:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по этой ссылке: https://vk.com/dev/friends.getOnline</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/friendsGetOnline:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsGetMutual:</TokenIdentifier>
			<Abstract type="html">Возвращает список идентификаторов общих друзей между парой пользователей</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsGetMutual:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по этой ссылке: https://vk.com/dev/friends.getMutual</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/friendsGetMutual:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsGetRecent:</TokenIdentifier>
			<Abstract type="html">Возвращает список идентификаторов недавно добавленных друзей текущего пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsGetRecent:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по этой ссылке: https://vk.com/dev/friends.getRecent</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/friendsGetRecent:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsGetRequests:</TokenIdentifier>
			<Abstract type="html">Возвращает информацию о полученных или отправленных заявках на добавление в друзья для текущего пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsGetRequests:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по этой ссылке: https://vk.com/dev/friends.getRequests</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/friendsGetRequests:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsAdd:</TokenIdentifier>
			<Abstract type="html">Одобряет или создает заявку на добавление в друзья.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsAdd:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по этой ссылке: https://vk.com/dev/friends.add</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/friendsAdd:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsEdit:</TokenIdentifier>
			<Abstract type="html">Редактирует списки друзей для выбранного друга</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsEdit:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по этой ссылке: https://vk.com/dev/friends.edit</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/friendsEdit:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsDelete:</TokenIdentifier>
			<Abstract type="html">Удаляет пользователя из списка друзей или отклоняет заявку в друзья</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsDelete:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по этой ссылке: https://vk.com/dev/friends.delete</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/friendsDelete:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsGetLists:</TokenIdentifier>
			<Abstract type="html">Возвращает список меток друзей текущего пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsGetLists:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по этой ссылке: https://vk.com/dev/friends.getLists</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/friendsGetLists:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsAddList:</TokenIdentifier>
			<Abstract type="html">Создает новый список друзей у текущего пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsAddList:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по этой ссылке: https://vk.com/dev/friends.addList</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/friendsAddList:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsEditList:</TokenIdentifier>
			<Abstract type="html">Редактирует существующий список друзей текущего пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsEditList:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по этой ссылке: https://vk.com/dev/friends.editList</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/friendsEditList:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsDeleteList:</TokenIdentifier>
			<Abstract type="html">Удаляет существующий список друзей текущего пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsDeleteList:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по этой ссылке: https://vk.com/dev/friends.deleteList</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/friendsDeleteList:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsGetAppUsers:</TokenIdentifier>
			<Abstract type="html">Возвращает список идентификаторов друзей текущего пользователя, которые установили данное приложение</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsGetAppUsers:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по этой ссылке: https://vk.com/dev/friends.getAppUsers</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/friendsGetAppUsers:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsGetByPhones:</TokenIdentifier>
			<Abstract type="html">Возвращает список друзей пользователя, у которых завалидированные или указанные в профиле телефонные номера входят в заданный список.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsGetByPhones:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по этой ссылке: https://vk.com/dev/friends.getByPhones</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/friendsGetByPhones:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsDeleteAllRequests:</TokenIdentifier>
			<Abstract type="html">Отмечает все входящие заявки на добавление в друзья как просмотренные</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsDeleteAllRequests:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по этой ссылке: https://vk.com/dev/friends.deleteAllRequests</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/friendsDeleteAllRequests:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsGetSuggestions:</TokenIdentifier>
			<Abstract type="html">Возвращает список профилей пользователей, которые могут быть друзьями текущего пользователя.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsGetSuggestions:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по этой ссылке: https://vk.com/dev/friends.getSuggestions</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/friendsGetSuggestions:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsAreFriends:</TokenIdentifier>
			<Abstract type="html">Возвращает информацию о том, добавлен ли текущий пользователь в друзья у указанных пользователей.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsAreFriends:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по ссылке: https://vk.com/dev/friends.areFriends</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/friendsAreFriends:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosCreateAlbum:</TokenIdentifier>
			<Abstract type="html">Создает пустой альбом для фотографий</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosCreateAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по ссылке: https://vk.com/dev/photos.createAlbum</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosCreateAlbum:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosEditAlbum:</TokenIdentifier>
			<Abstract type="html">Редактирует данные альбома для фотографий пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosEditAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по ссылке: https://vk.com/dev/photos.editAlbum</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosEditAlbum:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetAlbums:</TokenIdentifier>
			<Abstract type="html">Возвращает список альбомов пользователя или сообщества</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetAlbums:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по ссылке: https://vk.com/dev/photos.getAlbums</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetAlbums:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGet:</TokenIdentifier>
			<Abstract type="html">Возвращает список фотографий в альбоме</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по ссылке: https://vk.com/dev/photos.get</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosGet:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetAlbumsCount:</TokenIdentifier>
			<Abstract type="html">Возвращает количество доступных альбомов пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetAlbumsCount:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по ссылке: https://vk.com/dev/photos.getAlbumsCount</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetAlbumsCount:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetProfile:</TokenIdentifier>
			<Abstract type="html">Возвращает список фотографий со страницы пользователя или сообщества</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetProfile:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по ссылке: https://vk.com/dev/photos.getProfile</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetProfile:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetByID:</TokenIdentifier>
			<Abstract type="html">Возвращает информацию о фотографиях по их идентификаторам</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetByID:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список по этой ссылке: https://vk.com/dev/photos.getById</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetByID:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetUploadServer:</TokenIdentifier>
			<Abstract type="html">Возвращает адрес сервера для загрузки фотографий</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetUploadServer:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.getUploadServer</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetUploadServer:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetProfileUploadServer:</TokenIdentifier>
			<Abstract type="html">Возвращает адрес сервера для загрузки фотографии на страницу пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetProfileUploadServer:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.getProfileUploadServer</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetProfileUploadServer:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetChatUploadServer:</TokenIdentifier>
			<Abstract type="html">Позволяет получить адрес для загрузки фотографий мультидиалогов</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetChatUploadServer:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.getChatUploadServer</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetChatUploadServer:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosSaveProfilePhoto:</TokenIdentifier>
			<Abstract type="html">Сохраняет фотографию пользователя после успешной загрузки</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosSaveProfilePhoto:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.saveProfilePhoto</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosSaveProfilePhoto:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosSaveWallPhoto:</TokenIdentifier>
			<Abstract type="html">Сохраняет фотографии после успешной загрузки на URI, полученный методом photos.getWallUploadServer</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosSaveWallPhoto:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.saveWallPhoto</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosSaveWallPhoto:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetWallUploadServer:</TokenIdentifier>
			<Abstract type="html">Возвращает адрес сервера для загрузки фотографии на стену пользователя.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetWallUploadServer:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.getWallUploadServer</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetWallUploadServer:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetMessagesUploadServer:</TokenIdentifier>
			<Abstract type="html">Возвращает адрес сервера для загрузки фотографии в личное сообщение пользователю</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetMessagesUploadServer:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.getMessagesUploadServer</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetMessagesUploadServer:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosSaveMessagesPhoto:</TokenIdentifier>
			<Abstract type="html">Сохраняет фотографию после успешной загрузки на URI, полученный методом photos.getMessagesUploadServer</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosSaveMessagesPhoto:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.saveMessagesPhoto</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosSaveMessagesPhoto:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosSearch:</TokenIdentifier>
			<Abstract type="html">Осуществляет поиск изображений по местоположению или описанию</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosSearch:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.search</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosSearch:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosSave:</TokenIdentifier>
			<Abstract type="html">Сохраняет фотографии после успешной загрузки</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosSave:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.save</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosSave:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosEdit:</TokenIdentifier>
			<Abstract type="html">Изменяет описание у выбранной фотографии</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosEdit:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.edit</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosEdit:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosMove:</TokenIdentifier>
			<Abstract type="html">Переносит фотографию из одного альбома в другой</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosMove:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.move</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosMove:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosMakeCover:</TokenIdentifier>
			<Abstract type="html">Делает фотографию обложкой альбома</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosMakeCover:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.makeCover</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosMakeCover:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosReorderAlbums:</TokenIdentifier>
			<Abstract type="html">Меняет порядок альбома в списке альбомов пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosReorderAlbums:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.reorderAlbums</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosReorderAlbums:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosReorderPhotos:</TokenIdentifier>
			<Abstract type="html">Меняет порядок фотографии в списке фотографий альбома пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosReorderPhotos:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.reorderPhotos</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosReorderPhotos:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetAll:</TokenIdentifier>
			<Abstract type="html">Возвращает все фотографии пользователя или сообщества в антихронологическом порядке</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetAll:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.getAll</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetAll:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetUserPhotos:</TokenIdentifier>
			<Abstract type="html">Возвращает список фотографий, на которых отмечен пользователь</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetUserPhotos:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.getUserPhotos</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetUserPhotos:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosDeleteAlbum:</TokenIdentifier>
			<Abstract type="html">Удаляет указанный альбом для фотографий у текущего пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosDeleteAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.deleteAlbum</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosDeleteAlbum:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosDelete:</TokenIdentifier>
			<Abstract type="html">Удаление фотографии на сайте</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosDelete:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.delete</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosDelete:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosConfirmTagWithCusomOptions:</TokenIdentifier>
			<Abstract type="html">Подтверждает отметку на фотографии</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosConfirmTagWithCusomOptions:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.confirmTag</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosConfirmTagWithCusomOptions:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetComments:</TokenIdentifier>
			<Abstract type="html">Возвращает список комментариев к фотографии</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetComments:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.getComments</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetComments:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetAllComments:</TokenIdentifier>
			<Abstract type="html">Возвращает отсортированный в антихронологическом порядке список всех комментариев к конкретному альбому или ко всем альбомам пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetAllComments:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.getAllComments</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetAllComments:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosCreateComment:</TokenIdentifier>
			<Abstract type="html">Создает новый комментарий к фотографии</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosCreateComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.createComment</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosCreateComment:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosDeleteComment:</TokenIdentifier>
			<Abstract type="html">Удаляет комментарий к фотографии</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosDeleteComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.deleteComment</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosDeleteComment:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosRestoreComment:</TokenIdentifier>
			<Abstract type="html">Восстанавливает удаленный комментарий к фотографии</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosRestoreComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.restoreComment</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosRestoreComment:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosEditComment:</TokenIdentifier>
			<Abstract type="html">Изменяет текст комментария к фотографии</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosEditComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.editComment</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosEditComment:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetTags:</TokenIdentifier>
			<Abstract type="html">Возвращает список отметок на фотографии</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetTags:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.getTags</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetTags:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosPutTag:</TokenIdentifier>
			<Abstract type="html">Добавляет отметку на фотографию</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosPutTag:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.putTag</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosPutTag:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosRemoveTag:</TokenIdentifier>
			<Abstract type="html">Удаляет отметку с фотографии</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosRemoveTag:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.removeTag</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosRemoveTag:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetNewTags:</TokenIdentifier>
			<Abstract type="html">Возвращает список фотографий, на которых есть непросмотренные отметки</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetNewTags:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/photos.getNewTags</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetNewTags:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallGet:</TokenIdentifier>
			<Abstract type="html">Возвращает список записей со стены пользователя или сообщества</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/wall.get</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/wallGet:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallGetByID:</TokenIdentifier>
			<Abstract type="html">Возвращает список записей со стен пользователей по их идентификаторам</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallGetByID:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/wall.getById</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/wallGetByID:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallSavePost:</TokenIdentifier>
			<Abstract type="html">Сохраняет запись на стене пользователя. Запись может содержать фотографию, ранее загруженную на сервер ВКонтакте, или любую доступную фотографию из альбома пользователя.
При запуске со стены приложение открывается в окне размером 607x412 и ему передаются параметры, описанные здесь.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallSavePost:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/wall.savePost</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/wallSavePost:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallPost:</TokenIdentifier>
			<Abstract type="html">Публикует новую запись на своей или чужой стене.
Данный метод позволяет создать новую запись на стене, а также опубликовать предложенную новость или отложенную запись.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallPost:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/wall.post</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/wallPost:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallRepost:</TokenIdentifier>
			<Abstract type="html">Копирует объект на стену пользователя или сообщества</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallRepost:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/wall.repost</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/wallRepost:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallGetReposts:</TokenIdentifier>
			<Abstract type="html">Позволяет получать список репостов заданной записи</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallGetReposts:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/wall.getReposts</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/wallGetReposts:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallEdit:</TokenIdentifier>
			<Abstract type="html">Редактирует запись на стене</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallEdit:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/wall.edit</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/wallEdit:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallDelete:</TokenIdentifier>
			<Abstract type="html">Удаляет запись со стены</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallDelete:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/wall.delete</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/wallDelete:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallRestore:</TokenIdentifier>
			<Abstract type="html">Восстанавливает удаленную запись на стене пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallRestore:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/wall.restore</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/wallRestore:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallGetComments:</TokenIdentifier>
			<Abstract type="html">Возвращает список комментариев к записи на стене пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallGetComments:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/wall.getComments</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/wallGetComments:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallAddComment:</TokenIdentifier>
			<Abstract type="html">Добавляет комментарий к записи на стене пользователя или сообщества</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallAddComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: http://vk.com/dev/wall.addComment</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/wallAddComment:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallDeleteComment:</TokenIdentifier>
			<Abstract type="html">Удаляет комментарий текущего пользователя к записи на своей или чужой стене</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallDeleteComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/wall.deleteComment</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/wallDeleteComment:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallRestoreComment:</TokenIdentifier>
			<Abstract type="html">Восстанавливает комментарий текущего пользователя к записи на своей или чужой стене</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallRestoreComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/wall.restoreComment</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/wallRestoreComment:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoGet:</TokenIdentifier>
			<Abstract type="html">Возвращает информацию о видеозаписях</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.get</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoGet:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoEdit:</TokenIdentifier>
			<Abstract type="html">Редактирует данные видеозаписи на странице пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoEdit:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.edit</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoEdit:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoAdd:</TokenIdentifier>
			<Abstract type="html">Добавляет видеозапись в список пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoAdd:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.add</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoAdd:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoSave:</TokenIdentifier>
			<Abstract type="html">Возвращает адрес сервера (необходимый для загрузки) и данные видеозаписи.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoSave:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.save</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoSave:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoDelete:</TokenIdentifier>
			<Abstract type="html">Удаляет видеозапись со страницы пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoDelete:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.delete</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoDelete:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoRestore:</TokenIdentifier>
			<Abstract type="html">Восстанавливает удаленную видеозапись</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoRestore:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.restore</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoRestore:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoSearch:</TokenIdentifier>
			<Abstract type="html">Возвращает список видеозаписей в соответствии с заданным критерием поиска</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoSearch:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.search</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoSearch:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoGetUserVideos:</TokenIdentifier>
			<Abstract type="html">Возвращает список видеозаписей, на которых отмечен пользователь</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoGetUserVideos:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.getUserVideos</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoGetUserVideos:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoGetAlbums:</TokenIdentifier>
			<Abstract type="html">Возвращает список альбомов видеозаписей пользователя или сообщества</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoGetAlbums:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.getAlbums</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoGetAlbums:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoAddAlbum:</TokenIdentifier>
			<Abstract type="html">Создает пустой альбом видеозаписей</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoAddAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.addAlbum</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoAddAlbum:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoEditAlbum:</TokenIdentifier>
			<Abstract type="html">Редактирует название альбома видеозаписей</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoEditAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.editAlbum</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoEditAlbum:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoDeleteAlbum:</TokenIdentifier>
			<Abstract type="html">Удаляет альбом видеозаписей</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoDeleteAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.deleteAlbum</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoDeleteAlbum:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoMoveToAlbum:</TokenIdentifier>
			<Abstract type="html">Перемещает видеозаписи в альбом</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoMoveToAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.moveToAlbum</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoMoveToAlbum:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoGetComments:</TokenIdentifier>
			<Abstract type="html">Возвращает список комментариев к видеозаписи</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoGetComments:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.getComments</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoGetComments:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoCreateComment:</TokenIdentifier>
			<Abstract type="html">Cоздает новый комментарий к видеозаписи</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoCreateComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.createComment</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoCreateComment:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoDeleteComment:</TokenIdentifier>
			<Abstract type="html">Удаляет комментарий к видеозаписи.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoDeleteComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.deleteComment</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoDeleteComment:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoRestoreComment:</TokenIdentifier>
			<Abstract type="html">Восстанавливает удаленный комментарий к видеозаписи</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoRestoreComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.restoreComment</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoRestoreComment:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoEditComment:</TokenIdentifier>
			<Abstract type="html">Изменяет текст комментария к видеозаписи</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoEditComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.editComment</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoEditComment:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoGetTags:</TokenIdentifier>
			<Abstract type="html">Возвращает список отметок на видеозаписи</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoGetTags:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.getTags</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoGetTags:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoPutTag:</TokenIdentifier>
			<Abstract type="html">Добавляет отметку на видеозапись</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoPutTag:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.putTag</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoPutTag:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoRemoveTag:</TokenIdentifier>
			<Abstract type="html">Удаляет отметку с видеозаписи</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoRemoveTag:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.removeTag</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoRemoveTag:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoGetNewTags:</TokenIdentifier>
			<Abstract type="html">Возвращает список видеозаписей, на которых есть непросмотренные отметки</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoGetNewTags:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.getNewTags</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoGetNewTags:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoReport:</TokenIdentifier>
			<Abstract type="html">Позволяет пожаловаться на видеозапись</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoReport:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/video.report</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/videoReport:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedGet:</TokenIdentifier>
			<Abstract type="html">Возвращает данные, необходимые для показа списка новостей для текущего пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/newsfeed.get</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/newsfeedGet:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedGetRecommended:</TokenIdentifier>
			<Abstract type="html">Получает список новостей, рекомендованных пользователю</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedGetRecommended:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/newsfeed.getRecommended</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/newsfeedGetRecommended:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedGetComments:</TokenIdentifier>
			<Abstract type="html">Возвращает данные, необходимые для показа раздела комментариев в новостях пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedGetComments:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/newsfeed.getComments</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/newsfeedGetComments:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedGetMentions:</TokenIdentifier>
			<Abstract type="html">Возвращает список записей пользователей на своих стенах, в которых упоминается указанный пользователь</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedGetMentions:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/newsfeed.getMentions</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/newsfeedGetMentions:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedGetBanned:</TokenIdentifier>
			<Abstract type="html">Возвращает список пользователей и групп, которые текущий пользователь скрыл из ленты новостей</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedGetBanned:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/newsfeed.getBanned</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/newsfeedGetBanned:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedAddBan:</TokenIdentifier>
			<Abstract type="html">Запрещает показывать новости от заданных пользователей и групп в ленте новостей текущего пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedAddBan:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/newsfeed.addBan</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/newsfeedAddBan:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedDeleteBan:</TokenIdentifier>
			<Abstract type="html">Разрешает показывать новости от заданных пользователей и групп в ленте новостей текущего пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedDeleteBan:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/newsfeed.deleteBan</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/newsfeedDeleteBan:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedSearch:</TokenIdentifier>
			<Abstract type="html">Возвращает результаты поиска по статусам</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedSearch:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/newsfeed.search</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/newsfeedSearch:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedGetLists:</TokenIdentifier>
			<Abstract type="html">Возвращает пользовательские списки новостей</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedGetLists:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/newsfeed.getLists</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/newsfeedGetLists:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedUnsubscribe:</TokenIdentifier>
			<Abstract type="html">Отписывает текущего пользователя от комментариев к заданному объекту</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedUnsubscribe:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список здесь: https://vk.com/dev/newsfeed.unsubscribe</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/newsfeedUnsubscribe:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsIsMember:</TokenIdentifier>
			<Abstract type="html">Возвращает информацию о том, является ли пользователь участником сообщества</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsIsMember:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/groups.isMember</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/groupsIsMember:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsGetByID:</TokenIdentifier>
			<Abstract type="html">Возвращает информацию о заданном сообществе или о нескольких сообществах</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsGetByID:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/groups.getById</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/groupsGetByID:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsGet:</TokenIdentifier>
			<Abstract type="html">Возвращает список сообществ указанного пользователя</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/groups.get</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/groupsGet:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsGetMembers:</TokenIdentifier>
			<Abstract type="html">Возвращает список участников сообщества</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsGetMembers:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/groups.getMembers</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/groupsGetMembers:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsJoin:</TokenIdentifier>
			<Abstract type="html">Данный метод позволяет вступить в группу, публичную страницу, а также подтвердить участие во встрече.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsJoin:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/groups.join</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/groupsJoin:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsLeave:</TokenIdentifier>
			<Abstract type="html">Данный метод позволяет выходить из группы, публичной страницы, или встречи</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsLeave:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/groups.leave</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/groupsLeave:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsSearch:</TokenIdentifier>
			<Abstract type="html">Осуществляет поиск сообществ по заданной подстроке</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsSearch:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/groups.search</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/groupsSearch:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsGetInvites:</TokenIdentifier>
			<Abstract type="html">Данный метод возвращает список приглашений в сообщества и встречи</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsGetInvites:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/groups.getInvites</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/groupsGetInvites:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsBanUser:</TokenIdentifier>
			<Abstract type="html">Добавляет пользователя в черный список группы</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsBanUser:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/groups.banUser</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/groupsBanUser:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsUnbanUser:</TokenIdentifier>
			<Abstract type="html">Убирает пользователя из черного списка группы</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsUnbanUser:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/groups.unbanUser</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/groupsUnbanUser:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsGetBanned:</TokenIdentifier>
			<Abstract type="html">Возвращает список забаненных пользователей</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsGetBanned:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">ключи-значения, полный список в документации: https://vk.com/dev/groups.getBanned</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@see info</Abstract></ReturnValue>
			<Anchor>//api/name/groupsGetBanned:</Anchor>
            <NodeRef refid="8"/>
		</Token>
		
	</File>
</Tokens>