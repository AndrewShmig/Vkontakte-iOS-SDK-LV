<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/VKStorage.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/VKStorage</TokenIdentifier>
			<Abstract type="html">Class manages user access tokens and corresponding cached data.</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>
			
			<NodeRef refid="6"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKStorage/setIsEmpty:</TokenIdentifier>
			<Abstract type="html">Is current storage empty?</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) BOOL isEmpty</Declaration>
			
			
			<Anchor>//api/name/isEmpty</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKStorage/isEmpty</TokenIdentifier>
			<Abstract type="html">Is current storage empty?</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) BOOL isEmpty</Declaration>
			
			
			<Anchor>//api/name/isEmpty</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VKStorage/isEmpty</TokenIdentifier>
			<Abstract type="html">Is current storage empty?</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) BOOL isEmpty</Declaration>
			
			
			<Anchor>//api/name/isEmpty</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKStorage/setCount:</TokenIdentifier>
			<Abstract type="html">Size of VKStorage storage (number of objects in it)</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSUInteger count</Declaration>
			
			
			<Anchor>//api/name/count</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKStorage/count</TokenIdentifier>
			<Abstract type="html">Size of VKStorage storage (number of objects in it)</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSUInteger count</Declaration>
			
			
			<Anchor>//api/name/count</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VKStorage/count</TokenIdentifier>
			<Abstract type="html">Size of VKStorage storage (number of objects in it)</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSUInteger count</Declaration>
			
			
			<Anchor>//api/name/count</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKStorage/setFullStoragePath:</TokenIdentifier>
			<Abstract type="html">Full path to main storage directory</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSString *fullStoragePath</Declaration>
			
			
			<Anchor>//api/name/fullStoragePath</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKStorage/fullStoragePath</TokenIdentifier>
			<Abstract type="html">Full path to main storage directory</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSString *fullStoragePath</Declaration>
			
			
			<Anchor>//api/name/fullStoragePath</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VKStorage/fullStoragePath</TokenIdentifier>
			<Abstract type="html">Full path to main storage directory</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSString *fullStoragePath</Declaration>
			
			
			<Anchor>//api/name/fullStoragePath</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKStorage/setFullCacheStoragePath:</TokenIdentifier>
			<Abstract type="html">Full path to main cache directory</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSString *fullCacheStoragePath</Declaration>
			
			
			<Anchor>//api/name/fullCacheStoragePath</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKStorage/fullCacheStoragePath</TokenIdentifier>
			<Abstract type="html">Full path to main cache directory</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSString *fullCacheStoragePath</Declaration>
			
			
			<Anchor>//api/name/fullCacheStoragePath</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VKStorage/fullCacheStoragePath</TokenIdentifier>
			<Abstract type="html">Full path to main cache directory</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSString *fullCacheStoragePath</Declaration>
			
			
			<Anchor>//api/name/fullCacheStoragePath</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/VKStorage/sharedStorage</TokenIdentifier>
			<Abstract type="html">Shared storage</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>+ (instancetype)sharedStorage</Declaration>
			
			<ReturnValue><Abstract type="html">shared instance of VKStorage class</Abstract></ReturnValue>
			<Anchor>//api/name/sharedStorage</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKStorage/createStorageItemForAccessToken:</TokenIdentifier>
			<Abstract type="html">Creates new VKStorageItem</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>- (VKStorageItem *)createStorageItemForAccessToken:(VKAccessToken *)token</Declaration>
			<Parameters>
				<Parameter>
					<Name>token</Name>
					<Abstract type="html">VKAccessToken for which new storage item will be created</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">instance of VKStorageItem</Abstract></ReturnValue>
			<Anchor>//api/name/createStorageItemForAccessToken:</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKStorage/storeItem:</TokenIdentifier>
			<Abstract type="html">Adds new element to VKStorage</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>- (void)storeItem:(VKStorageItem *)item</Declaration>
			<Parameters>
				<Parameter>
					<Name>item</Name>
					<Abstract type="html">new item to be added</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/storeItem:</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKStorage/removeItem:</TokenIdentifier>
			<Abstract type="html">Removes VKStorageItem from VKStorage.</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>- (void)removeItem:(VKStorageItem *)item</Declaration>
			<Parameters>
				<Parameter>
					<Name>item</Name>
					<Abstract type="html">item to remove from VKStorage</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeItem:</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKStorage/clean</TokenIdentifier>
			<Abstract type="html">Clears storage.</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>- (void)clean</Declaration>
			
			
			<Anchor>//api/name/clean</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKStorage/cleanCachedData</TokenIdentifier>
			<Abstract type="html">Removes all cached data for all users.</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>- (void)cleanCachedData</Declaration>
			
			
			<Anchor>//api/name/cleanCachedData</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKStorage/storageItemForUserID:</TokenIdentifier>
			<Abstract type="html">Returns user&apos;s corresponding VKStorageItem by unique user identifier</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>- (VKStorageItem *)storageItemForUserID:(NSUInteger)userID</Declaration>
			<Parameters>
				<Parameter>
					<Name>userID</Name>
					<Abstract type="html">unique user identifier</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">instance of VKStorageItem, or nil, if there is no such.</Abstract></ReturnValue>
			<Anchor>//api/name/storageItemForUserID:</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKStorage/storageItems</TokenIdentifier>
			<Abstract type="html">List of all items in current storage</Abstract>
			<DeclaredIn>VKStorage.h</DeclaredIn>			
			
			<Declaration>- (NSArray *)storageItems</Declaration>
			
			<ReturnValue><Abstract type="html">array of VKStorageItems</Abstract></ReturnValue>
			<Anchor>//api/name/storageItems</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
	</File>
</Tokens>