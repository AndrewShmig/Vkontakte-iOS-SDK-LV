<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/VKConnector.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/VKConnector</TokenIdentifier>
			<Abstract type="html">The main purpose of this class is to process user authorization and obtain
access token which then will be used to perform requests from behalf of current
user.</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>
			
			<NodeRef refid="3"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKConnector/setDelegate:</TokenIdentifier>
			<Abstract type="html">Delegate</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak, readonly) id&lt;VKConnectorDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKConnector/delegate</TokenIdentifier>
			<Abstract type="html">Delegate</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak, readonly) id&lt;VKConnectorDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VKConnector/delegate</TokenIdentifier>
			<Abstract type="html">Delegate</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, weak, readonly) id&lt;VKConnectorDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKConnector/setAppID:</TokenIdentifier>
			<Abstract type="html">Application&apos;s unique identifier</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSString *appID</Declaration>
			
			
			<Anchor>//api/name/appID</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKConnector/appID</TokenIdentifier>
			<Abstract type="html">Application&apos;s unique identifier</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSString *appID</Declaration>
			
			
			<Anchor>//api/name/appID</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VKConnector/appID</TokenIdentifier>
			<Abstract type="html">Application&apos;s unique identifier</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSString *appID</Declaration>
			
			
			<Anchor>//api/name/appID</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKConnector/setPermissions:</TokenIdentifier>
			<Abstract type="html">Permissions</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSArray *permissions</Declaration>
			
			
			<Anchor>//api/name/permissions</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKConnector/permissions</TokenIdentifier>
			<Abstract type="html">Permissions</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSArray *permissions</Declaration>
			
			
			<Anchor>//api/name/permissions</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VKConnector/permissions</TokenIdentifier>
			<Abstract type="html">Permissions</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSArray *permissions</Declaration>
			
			
			<Anchor>//api/name/permissions</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/VKConnector/sharedInstance</TokenIdentifier>
			<Abstract type="html">Returns shared instances of VKConnector class.</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>			
			
			<Declaration>+ (id)sharedInstance</Declaration>
			
			
			<Anchor>//api/name/sharedInstance</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKConnector/startWithAppID:permissons:webView:delegate:</TokenIdentifier>
			<Abstract type="html">Starts user authorization process.</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>			
			
			<Declaration>- (void)startWithAppID:(NSString *)appID permissons:(NSArray *)permissions webView:(UIWebView *)webView delegate:(id&lt;VKConnectorDelegate&gt;)delegate</Declaration>
			<Parameters>
				<Parameter>
					<Name>appID</Name>
					<Abstract type="html">application&apos;s unique identifier</Abstract>
				</Parameter><Parameter>
					<Name>permissions</Name>
					<Abstract type="html">array of permissions (wall, friends, audio, video etc)</Abstract>
				</Parameter><Parameter>
					<Name>webView</Name>
					<Abstract type="html">UIWebView which will be used to display VK authorization page</Abstract>
				</Parameter><Parameter>
					<Name>delegate</Name>
					<Abstract type="html">delegate which will receive notifications</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startWithAppID:permissons:webView:delegate:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKConnector/clearCookies</TokenIdentifier>
			<Abstract type="html">Removes all cookies which were obtained after user has authorized VK
application. This method is used to log out current user.</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>			
			
			<Declaration>- (void)clearCookies</Declaration>
			
			
			<Anchor>//api/name/clearCookies</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
	</File>
</Tokens>