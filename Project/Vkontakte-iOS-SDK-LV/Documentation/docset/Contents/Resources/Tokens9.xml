<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/VKConnectorDelegate.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/VKConnectorDelegate</TokenIdentifier>
			<Abstract type="html">Protocol incapsulates methods that are triggered during user authorization
process or access token status changes.</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>
			
			<NodeRef refid="9"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/VKConnectorDelegate/VKConnector:willShowWebView:</TokenIdentifier>
			<Abstract type="html">Method is called when user needs to perform some action (enter login and
password, authorize your application etc)</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>			
			
			<Declaration>- (void)VKConnector:(VKConnector *)connector willShowWebView:(UIWebView *)webView</Declaration>
			<Parameters>
				<Parameter>
					<Name>connector</Name>
					<Abstract type="html">VKConnector instance that sends notifications</Abstract>
				</Parameter><Parameter>
					<Name>webView</Name>
					<Abstract type="html">UIWebView that displays authorization page</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/VKConnector:willShowWebView:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/VKConnectorDelegate/VKConnector:willHideWebView:</TokenIdentifier>
			<Abstract type="html">Method is called when UIWebView should be hidden, this method is called after
user has entered login+password or has authorized an application (or pressed
cancel button etc).</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>			
			
			<Declaration>- (void)VKConnector:(VKConnector *)connector willHideWebView:(UIWebView *)webView</Declaration>
			<Parameters>
				<Parameter>
					<Name>connector</Name>
					<Abstract type="html">VKConnector instance that sends notifications</Abstract>
				</Parameter><Parameter>
					<Name>webView</Name>
					<Abstract type="html">UIWebView that displays authorization page and needs to be hidden</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/VKConnector:willHideWebView:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/VKConnectorDelegate/VKConnector:accessTokenRenewalSucceeded:</TokenIdentifier>
			<Abstract type="html">Method is called when access token is successfully updated</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>			
			
			<Declaration>- (void)VKConnector:(VKConnector *)connector accessTokenRenewalSucceeded:(VKAccessToken *)accessToken</Declaration>
			<Parameters>
				<Parameter>
					<Name>connector</Name>
					<Abstract type="html">VKConnector instance that sends notifications</Abstract>
				</Parameter><Parameter>
					<Name>accessToken</Name>
					<Abstract type="html">updated access token</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/VKConnector:accessTokenRenewalSucceeded:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/VKConnectorDelegate/VKConnector:accessTokenRenewalFailed:</TokenIdentifier>
			<Abstract type="html">Method is called when access token failed to be updated. The main reason
could be that user denied/canceled to authorize your application.</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>			
			
			<Declaration>- (void)VKConnector:(VKConnector *)connector accessTokenRenewalFailed:(VKAccessToken *)accessToken</Declaration>
			<Parameters>
				<Parameter>
					<Name>connector</Name>
					<Abstract type="html">VKConnector instance that sends notifications</Abstract>
				</Parameter><Parameter>
					<Name>accessToken</Name>
					<Abstract type="html">access token (equals to nil)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/VKConnector:accessTokenRenewalFailed:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/VKConnectorDelegate/VKConnector:connectionErrorOccured:</TokenIdentifier>
			<Abstract type="html">Method is called when connection error occurred during authorization process.</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>			
			
			<Declaration>- (void)VKConnector:(VKConnector *)connector connectionErrorOccured:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>connector</Name>
					<Abstract type="html">VKConnector instance that sends notifications</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">error description</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/VKConnector:connectionErrorOccured:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/VKConnectorDelegate/VKConnector:applicationWasDeleted:</TokenIdentifier>
			<Abstract type="html">Method is called if VK application was deleted.</Abstract>
			<DeclaredIn>VKConnector.h</DeclaredIn>			
			
			<Declaration>- (void)VKConnector:(VKConnector *)connector applicationWasDeleted:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>connector</Name>
					<Abstract type="html">VKConnector instance that sends notifications</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">error description</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/VKConnector:applicationWasDeleted:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
	</File>
</Tokens>